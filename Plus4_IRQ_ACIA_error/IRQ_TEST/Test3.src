.6502

;code to bypass error in +4 acia irq receive-byte routine,
;and eliminate xon/xoff software flow control for
;transmit and receive.

.org $0333           ;object code can be moved anywhere
                     ;  without reassembly
                     ;sys entry to set irq vector to newirq
                     ;sys restore (entry + 26) to restore
		     ;  default vector

entry:

   sei
   jsr   $fc55       ;just rts there
   tsx               ;pc now in stack
   dex
   lda   $0100,x
   clc
   adc   #(newirq - entry - 3) ;point to newirq
   sta   $0314
   inx
   lda   $0100,x
   adc   #0
   sta   $0315       ;irq vector now newirq
   cli
   rts               ;return from sys

restore:             ;restore = entry + 26

   sei               ;restore vector to $ce0e
   lda   #$0e
   sta   $0314
   lda   #$ce
   sta   $0315
   cli
   rts

newirq:              ;$035a (858) if entry = $0333

   lda   $ff09       ;not related to acia
   and   #$02
   beq   checkacia
   jsr   $ce60

checkacia:

   bit   $07d8       ;acia present?
   bpl   backtorom
   lda   $fd01       ;read status reg
   sta   $07d4       ;save status reg
   bpl   backtorom   ;bit 7 set if acia triggered irq
   inc   $03f0
   bne   transmit
   inc   $03f1

transmit:

   lda   $07d4
   and   #$10        ;transmit buffer empty?
   beq   backtorom
;   lda   $fd10       ;pin k of user port = cts
;   and   #$02
;   beq   backtorom   ;modem says don't send
   bit   $07ce       ;anything to send?
   bpl   backtorom

   ldy   $fd02
   tya
   eor   #$0c
   sta   $fd02

   ldx   #$00

   lda   $07cd
   lda   $07ce
   lda   $07cd
   lda   $07ce

   jsr   $ea83       ;send it

   lda   $07d4
   lda   $07d4
   lda   $07d4
   lda   $07d4
   lda   $07d4
   lda   $07d4

   sty   $fd02

backtorom:

   jmp   $ce2b       ;acia done, continue rest of irq


countirq:

   sei
   lda   #$00
   sta   $03f0
   sta   $03f1
   sta   $03f2
   cli

loop:

   bit   $07ce
   bmi   loop
   lda   #$55
   sta   $07cd
   sec
   ror   $07ce
   dec   $03f2
   bne   loop

   lda   $fd02
   eor   #$0c
   sta   $fd02
   rts
