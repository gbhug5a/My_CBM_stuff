.6502

;test to see how much delay is needed to prevent extra IRQ

.org $0333

entry:

   jsr   blank       ;blank the screen
   tsx               ;pc now in stack
   dex
   lda   $0100,x
   clc
   adc   #(newirq - entry - 2) ;point to newirq
   sta   $0314
   inx
   lda   $0100,x
   adc   #0
   sta   $0315       ;irq vector now newirq
   cli
   rts               ;return from sys

restore:             ;restore = entry + 26

   sei               ;restore vector to $ce0e
   lda   #$0e
   sta   $0314
   lda   #$ce
   sta   $0315
   jmp   unblank

newirq:              ;$035a (858) if entry = $0333

   lda   $ff09       ;raster thing not related to acia
   and   #$02
   beq   checkacia
   jsr   $ce60

checkacia:

   lda   $fd01       ;read status reg
   sta   $07d4       ;save status reg
   bpl   backtorom
   inc   $03f0       ;number of interrupts
   bne   transmit
   inc   $03f1

transmit:

   and   #$10        ;transmit buffer empty?
   beq   receive     ;no

   jsr   $ea62       ;bit 4 set going in
   lda   #$10
   bit   $07d4       ;now clear means a byte was sent
   beq   enable
   bne   receive

enable:

   lda   $fd02       ;turn on transmit interrupts
   and   #$f3        ;   if byte was sent
   ora   #$04
   sta   $fd02

   ldx   #$84        ;init down-counter to 4 and set bit 7
   stx   $07d8

   ldx   #$01

delay:

   dex
   bne   delay

   lda   $07d4       ;merge status bits from this interrupt
   ora   $fd01       ;also clears irq again
   sta   $07d4

receive:

   lda   $07d4
   and   #$08        ;received new byte?
   beq   backtorom
   lda   #$00        ;preload $07d5 with null
   sta   $07d5
   jsr   $ea9c       ;rest of receive code

backtorom:

   jmp   $ce2b       ;acia done, continue rest of irq

countirq:

   sei
   lda   #$00
   sta   $03f0
   sta   $03f1
   lda   #$40
   sta   $03f2
   cli

loop:

   bit   $07ce
   bmi   loop
   lda   #$55
   sta   $07cd
   sec
   ror   $07ce
   dec   $03f2
   bne   loop

   lda   #$0b
   sta   $fd02
   rts

blank:

   sei
   lda   $ff06
   and   #$ef
   sta   $ff06
   rts

unblank:

   sei
   lda   $ff06
   ora   #$10
   sta   $ff06
   cli
   rts

;e364 - blank screen
;e378 - restore screen
