

Note:  The "£" character represents the CBM pound sign.



                                   ENHANCED
                                  SPEEDSCRIPT
                             ---------------------
                             Plus4 or Expanded C16


WORD PROCESSING COMMANDS: The following commands vary somewhat from standard
SpeedScript. For a full explanation of SpeedScript, see the March, 1985, issue
of COMPUTE! magazine.

                   <C> = Control  <S> = Shift  (T) = Toggle
------------------------------------------------------------------------------
 csr r;l  Cursor to next character; previous character.
 csr d;u  Cursor to beginning of next line; previous line. Screen display line.
   f1;f4  Cursor to beginning of next word; previous word.
   f2;f5  Cursor to beginning of next sentence; previous sentence.
   f3;f6  Cursor to beginning of next paragraph; previous paragraph.
     DEL  Clear character to left of cursor.
    INST  Insert space at cursor.
    HOME  Cursor to top of screen. If already there, cursor to top of Text.
   CLEAR  Clear all Text from cursor to end. Cleared Text is not buffered.
    STOP  Insert 8 spaces at cursor.
     RUN  Insert 255 spaces at cursor.
    HELP  Load Text beginning at cursor. Command line green if cursor not HOME.
      f7  Save all Text. Text is saved in screen code format as program file.
     ESC  Exit to MONITOR. Re-enter S/S from BASIC (RUN) or MON (G100D).
lft arrw  Cursor to previous character, convert it to space.
  RETURN  Forced carriage return. Display shows left arrow.
<S>RETRN  Two CR's and 8 spaces (new paragraph).
   <C> =  Clear character under cursor.
<S><C> =  Clear current and all following spaces, to 1st non-space character.
   <C> ,  Save current cursor position for later return.
   <C> .  Return to previously saved cursor position.
   <C> 7  "Hide" current buffer contents.  "/" shows in command line.
          Start-of-buffer = current end-of-buffer pointer.
   <C> 6  "Uncover" hidden buffer. End-of-buffer pointer not changed.
          Start-of-buffer = bottom of buffer memory range.
   <C> k  Kill buffer. End-of-buffer pointer = current start-of-buffer.
          Hidden Buffer Not Affected ("HBNA")
   <C> r  Restore current unhidden buffer contents to Text at cursor. (HBNA)
   <C> x  Exchange current Text file and any unhidden buffer contents. (HBNA)
   <C> e  Erase: Kill buffer, then clear from Text, and add to buffer, the
          following Words, Lines, Sentences, Paragraphs, All. (HBNA)
<S><C> e  Same, but buffer not Killed. Chain separate Erases to buffer. (HBNA)
   <C> d  Delete: Kill buffer, then clear from Text, and add to buffer, the
          previous Word, Line, Sentence, Paragraph, All. (HBNA)
<S><C> h  Enter Hunt phrase, go to first occurrence in Text after cursor.
   <C> h  Hunt for next occurrence of previously entered Hunt phrase.
<S><C> j  Enter Replace phrase, replace Hunt phrase in Text if current cursor
          position is a Hunt "found" location. (Replace phrase can be null.)
   <C> j  Replace Hunt phrase in Text with previously entered Replace phrase.
          (H and J are manual Hunt, manual Replace)
   <C> g  Enter Hunt and Replace phrases. Automatic (global) search and replace
          from cursor through end of Text.









                                      -2-


   <C> z  Cursor to end of Text.
   <C> i  (T)Enter/Exit insert mode. Automatic insert if cursor on left arrow.
   <C> v  Verify file to Text.
   <C> 4  Display disk directory. Space bar pauses, resumes, the listing.
   <C> 8  Send command to disk drive, then read the error channel.
   <C> u  Display amount of unused Text memory. Max = 21,504 bytes (21K).
   <C> £  Enter print format code. Displayed in REVERSE. See section on codes.
   <C> p  Print from cursor to end of Text to device #4, upper/lower case.
<S><C> p  Print to Screen, Disk, Printer or Tape.
          "Printer" gives full choice of device #, secondary address, filename.
     <S>  Shift or shift lock pauses printing.
STOP;CBM  STOP key or Commodore key aborts printing.
   <C> a  Change the case of the character under the cursor.


PRINT FORMAT CODES
------------------

Codes are entered with <C>£ and displayed in REVERSE. Stage 1 codes must be at
the beginning of a line, or follow another Stage 1 code. Stage 2 can be
anywhere. "##" means a number should follow the code.

Code  Default  Description  (2) = Stage 2
----  -------  --------------------------
a        -     Convert print output to true ASCII
b##     58     Bottom margin - the last line of printing, except footer
c (2)    -     Center rest of line on the page (not on the margins)
e (2)    -     Edge right - right justify at right margin
f        -     Footer - the rest of the line is the footer. May include Stage 2
g##:fn   -     Goto (Link) the next text file. ## = device #, fn = filename
h        -     Header - the rest of the line is the header. May include Stage 2
i        -     Information (comment) - the entire line will be totally ignored
j        -     Linefeed will follow carriage return
l##      6     Left margin - the number of spaces printed before the text
m        -     Margin release - sets l to zero for this line only (outdent)
n        -     Next page - forced paging
p##     66     Page length - the number of lines on a sheet of paper
r##     74     Right margin - max # of chars printed on a line, including l
s##      1     Spacing - 1 = single, 2 = double, etc.
t##      9     Top margin - the first line of printing, except header
u (2)    -     Underline toggle - backspace and underline (not CBM printers)
w        -     Wait for single sheet insertion (ignored if Screen, Disk, Tape)
x##     80     Across - width of the paper in columns (used for centering)
@##      1     Start page numbering with page ## (0 to 65535)
?##      1     Inhibit printing until page number ## is reached
# (2)    -     Causes the current page number to be printed
+##      5     The header will be printed on line ##
-##     62     The footer will be printed on line ##
£##      1     Print head is on this line when printing starts. For w, the
               next sheet must be inserted at the same place
[]       -     Text inside won't be printed, but Stage 1 codes will be executed












                                      -3-


Additional Stage 2 codes can be defined by entering the code character
(anything other than those listed above) in REVERSE using <C>£, followed by
"=" and the ASCII value to be printed. Four of these have been predefined, but
you can change them.

    Code      ASCII Value
    ----      -----------
     1        27  Escape
     2        14  Double width on some printers
     3        15  Normal width  "   "      "
     4        18  REVERSE on CBM printers, condensed on some others



PRINT LINKING (Code g):

All linked files should be on the same disk, or in sequence on tape. Loading
the next linked file erases the current file, so it should be Saved, or a copy
put in the buffer, before any printing involving linking is performed.


THE BUFFER:

Since the text and buffer memories are of equal size, two files may be in
memory at the same time. They may be switched by using the control character
sequence k6x7. The <C>k wipes out any unwanted items in the buffer, such as the
most recent <C>e, then <C>6 uncovers the file previously hidden in the buffer.
The <C>x exchanges the two files, and the <C>7 hides the buffered file again.
Printing does not affect the buffer in any way. Text can be moved around using
the Erase/Restore combination, or copied using multiple Restores.


ABORTS:

You can abort most functions requiring input by hitting RETURN. One exception
is Replace, which thinks the replace phrase is null. If you get stuck in
Replace, don't hit RETURN until you have entered either a duplicate of the
Hunt phrase or some phrase that won't otherwise be in your text file, like
"APPLE". Then if anything does get replaced, it will be easy to Hunt for.
In general, the manual Hunt and Replace are safer than the global combination.


MEMORY MAP:

$1001 - $2BFF   Word processing code and variables
$2C00 - $7FFF   Text memory
$8000 - $D3FF   Buffer memory
$FF40 - $FFC8   Old function keys stored here, restored on Exit to MONITOR
$1036 - $1038   Luminance/color for screen, border, text

SPEEDSCRIPT+4; SS+4 DOCS

George Hug      Tulsa, OK      April, 1986
